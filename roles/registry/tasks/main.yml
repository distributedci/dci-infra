# -*- encoding: utf-8 -*-
#
# Copyright 2018 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

---
- name: Ensure the needed SELinux boolean are enabled
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: Install registry dependencies
  yum:
    name: '{{ item }}'
  with_items:
    - docker
    - python-docker-py
    - pyOpenSSL

- name: Ensure docker is started
  service:
    name: docker
    enabled: true
    state: started

- name: Generate the docker_auth config
  template:
    src: docker_auth.yml.j2
    dest: /etc/docker_auth.yml

- name: Create docker_auth container
  docker_container:
    name: docker_auth
    image: cesanta/docker_auth:1.3
    network_mode: bridge
    ports:
      - 127.0.0.1:5001:5001
    command: '-log_dir /logs /etc/docker_auth.yml'
    restart_policy: always
    etc_hosts:
      registry.distributed-ci.io: '54.39.177.63'
    volumes:
      - /etc/ssl/letsencrypt:/ssl:z
      - /etc/docker_auth.yml:/etc/docker_auth.yml:ro
      - /var/log/docker_auth:/logs:z

- name: Create docker registry container
  docker_container:
    name: docker_registry
    image: registry:2
    network_mode: bridge
    ports:
      - 127.0.0.1:5000:5000
    restart_policy: always
    etc_hosts:
      registry.distributed-ci.io: '54.39.177.63'
    env:
      REGISTRY_AUTH: token
      REGISTRY_AUTH_TOKEN_REALM: "http{% if ssl_enabled|bool %}s{% endif %}://{{ registry_servername }}/auth"
      REGISTRY_AUTH_TOKEN_SERVICE: "Docker registry"
      REGISTRY_AUTH_TOKEN_ISSUER: "DCI auth server"
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: "/ssl/pem/{{ registry_servername }}.pem"
      REGISTRY_HTTP_ADDR: ":5000"
      REGISTRY_HTTP_HOST: "http{% if ssl_enabled|bool %}s{% endif %}://{{ registry_servername }}"
      REGISTRY_STORAGE: swift
      REGISTRY_STORAGE_SWIFT_USERNAME: "{{ store_username }}"
      REGISTRY_STORAGE_SWIFT_PASSWORD: "{{ store_password }}"
      REGISTRY_STORAGE_SWIFT_AUTHURL: "{{ store_auth_url }}"
      REGISTRY_STORAGE_SWIFT_TENANT: "'{{ store_tenant_name }}'"
      REGISTRY_STORAGE_SWIFT_REGION: "{{ store_region }}"
      REGISTRY_STORAGE_SWIFT_CONTAINER: "{{ store_registry_container }}"
    volumes:
      - /etc/ssl/letsencrypt:/ssl:z

- name: Create the registry vhost
  template:
    src: dci_registry.conf.j2
    dest: /etc/httpd/conf.d/dci_registry.conf
  notify:
    - reload httpd
