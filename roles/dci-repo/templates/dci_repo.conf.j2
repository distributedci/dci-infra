server {
    server_name               {{ repo_servername }};
    listen                    443 ssl;
    ssl_certificate           {{ repo_sslcertificatefile }};
    ssl_certificate_key       {{ repo_sslcertificatekeyfile }};
    ssl_client_certificate    {{ repo_sslcacertfile }};
    ssl_protocols             TLSv1.2;
    ssl_ciphers               'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_verify_client         on;
    add_header                Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    root                      {{ repo_rootdir }};

    location / {
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        autoindex        on;
    }

    location = /auth {
        internal;
        proxy_pass              http{% if ssl_enabled|bool %}s{% endif %}://{% if repo_servercert is defined %}localhost{% else %}{{ api_servername }}{% endif %}/api/v1/certs/verify;
        proxy_pass_request_body on;
        proxy_set_header        X-Original-URI $request_uri;
        proxy_set_header        SSLVerify $ssl_client_verify;
        proxy_set_header        SSLFingerprint $ssl_client_fingerprint;
    }

    access_log /var/{{ nginx_scl_prefix_dir | default("") }}log/nginx/{{ repo_servername }}_access_log main;
    error_log /var/{{ nginx_scl_prefix_dir | default("") }}log/nginx/{{ repo_servername }}_error_log;
}
