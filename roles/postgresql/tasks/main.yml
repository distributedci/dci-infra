# -*- encoding: utf-8 -*-
#
# Copyright 2015 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

---
- name: Enable SCL
  yum:
    name: centos-release-scl
    state: present
  tags:
    - dci-core

- name: Ensure PostgreSQL packages are installed
  yum:
    name: '{{ item }}'
    state: present
  with_items:
    - postgresql
# the sensu PostgreSQL check is linked against the postgresql client lib
    - postgresql-devel
# we keep installing the server even if we don't use it. This to have the
# postgresql service installed, as expected by ansible when it checks for
# the service with systemctl.
    - postgresql-server
    - rh-postgresql94-postgresql
    - rh-postgresql94-postgresql-devel
    - rh-postgresql94-postgresql-server
    - rh-postgresql94-postgresql-upgrade
    - python-psycopg2
  tags:
    - dci-core

- name: Ensure the regular PostgreSQL service is off. We use the one from SCL instead.
  service:
    name: postgresql
    state: stopped
    enabled: no
  tags:
    - dci-core

- stat:
    path: /var/lib/pgsql/data/postgresql.conf
  register: old_pg_conf_file
  tags:
     - dci-core

- stat:
    path: /var/opt/rh/rh-postgresql94/lib/pgsql/data/postgresql.conf
  register: new_pg_conf_file
  tags:
     - dci-core

- name: Upgrade from pg 9.2 to 9.4
  shell: . /opt/rh/rh-postgresql94/enable && postgresql-setup --upgrade --debug
  tags:
     - dci-core
  when: old_pg_conf_file.stat.exists and not new_pg_conf_file.stat.exists

- stat:
    path: /var/opt/rh/rh-postgresql94/lib/pgsql/data/postgresql.conf
  register: new_pg_conf_file
  tags:
     - dci-core

- name: Drop the old DB
  shell: mv /var/lib/pgsql/data /root/old_data
  tags:
     - dci-core
  when: old_pg_conf_file.stat.exists and new_pg_conf_file.stat.exists

- name: Initialize postgresql
  shell: . /opt/rh/rh-postgresql94/enable && postgresql-setup --initdb --debug
  tags:
     - dci-core
  when: not new_pg_conf_file.stat.exists

- name: Ensure PostgreSQL listen to all addresses
  lineinfile:
    dest: /var/opt/rh/rh-postgresql94/lib/pgsql/data/postgresql.conf
    regexp: "^listen_addresses = '*'"
    insertafter: '^#\s+-\s+Connection Settings'
    line: "listen_addresses = '*'"
  tags:
    - dci-core

- name: Include PostgreSQL memory configuration
  lineinfile:
    dest: /var/opt/rh/rh-postgresql94/lib/pgsql/data/postgresql.conf
    line: "include = 'memory.conf'"
  tags:
    - dci-core

- name: Write specific memory settings in memory.conf
  blockinfile:
    dest: /var/opt/rh/rh-postgresql94/lib/pgsql/data/memory.conf
    create: yes
    owner: postgres
    group: postgres
    mode: 0600
    block: |
      shared_buffers = {{ (ansible_memtotal_mb * 0.25)|int }}MB
      effective_cache_size = {{ (ansible_memtotal_mb * 0.50)|int }}MB
  notify: restart postgresql
  tags:
    - dci-core

- name: Ensure user can identify with password authentication mechanisms
  lineinfile:
    dest: /var/opt/rh/rh-postgresql94/lib/pgsql/data/pg_hba.conf
    line: 'host    all             all  {{ apiip }}/32            {{ item }}'
    insertafter: '^#\sIPv4\slocal.+'
  with_items:
    - password
    - md5
  tags:
    - dci-core

- name: Ensure user can identify with password authentication mechanisms
  lineinfile:
    dest: /var/opt/rh/rh-postgresql94/lib/pgsql/data/pg_hba.conf
    regexp: '^host\s+all\s+all\s+127\.0\.0\.1/32\s+{{ item }}$'
    insertafter: '^#\sIPv4\slocal.+'
    line: "host    all             all  127.0.0.1/32            {{ item }}"
  with_items:
    - password
    - md5
  tags:
    - dci-core

- name: Ensure PostgreSQL 9.4 service is started
  service:
    name: rh-postgresql94-postgresql
    state: started
    enabled: yes
  tags:
    - dci-core
#
# Create DCI database and user
#
- name: ensure database is created
  postgresql_db:
    name: '{{ dbname }}'
  become: yes
  become_user: postgres
  tags:
    - dci-core

- name: ensure user has access to database
  postgresql_user:
    db: '{{ dbname }}'
    name: '{{ dbuser }}'
    password: '{{ dbpassword }}'
    priv: ALL
  become: yes
  become_user: postgres
  tags:
    - dci-core

- name: ensure user does not have unnecessary privilege
  postgresql_user:
    name: '{{ dbuser }}'
    role_attr_flags: SUPERUSER,CREATEDB
  become: yes
  become_user: postgres
  tags:
    - dci-core
