# This is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80;
  listen [::]:80;
  server_name _;

  # use the internal podman resolver with a short TTL
  resolver {{ simple_quadlet_subnet | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }} valid=5s;

  root /usr/share/nginx/html;
  error_page 500 502 503 504 /50x.html;

  location / {
    index index.html index.htm;
  }

  # prometheus configuration.
  set $prometheus "http://prometheus:{{ prometheus_http_port }}";
  location {{ prometheus_web_path }} {
    include /etc/nginx/proxy.conf;
    proxy_pass $prometheus;
  }

  # alertmanager configuration.
  set $alertmanager "http://alertmanager:{{ alertmanager_http_port }}";
  location {{ alertmanager_web_path }} {
    include /etc/nginx/proxy.conf;
    proxy_pass $alertmanager;
  }

  # grafana configuration.
  set $grafana "http://grafana:{{ grafana_http_port }}";
  location {{ grafana_web_path }} {
    include /etc/nginx/proxy.conf;
    proxy_pass $grafana;
  }

  # Proxy Grafana Live WebSocket connections.
  location {{ grafana_web_path }}/api/live {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    include /etc/nginx/proxy.conf;
    proxy_pass $grafana;
  }
}
