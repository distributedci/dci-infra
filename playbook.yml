# -*- encoding: utf-8 -*-
# vim: set ft=yaml.ansible:
#
# Copyright 2015-2017 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Perform some sanity checks
  hosts: localhost
  vars:
    env_value: "{{ env | default('UNDEFINED', true) }}"
    env_group: "{{ env_value }}:!dci_ng"
    env_group_modifier: "&{{ env_group }}"
  tasks:
    - name: Validate argument_specs for the "env" variable
      ansible.builtin.validate_argument_spec:
        argument_spec: "{{ required_data }}"
      vars:
        required_data:
          env:
            description: The hostgroup that we must operate on (set with tag "env:<value>" in EC2 tags)
            type: str
            required: true

    - name: Verify that the "env" var is set
      ansible.builtin.assert:
        that: env_value != "UNDEFINED"
        fail_msg: "The 'env' var must be defined and set to a non-empty value and must be a non-empty hosts group!"
        success_msg: "'env' is defined and non-empty."

    - name: Verify that the hostgroup pointed by "env" is not empty
      ansible.builtin.assert:
        that: lookup("inventory_hostnames", env_group) | length > 0
        fail_msg: "The hostgroup named '{{ env_group }}' does not contain any hosts."
        success_msg: "Env hostgroup {{ env_group }} contains some hosts."

    - name: Verify that there's one host in the 'dci_database' group for this environment
      ansible.builtin.assert:
        that: "{{ lookup('inventory_hostnames', 'dci_database:{{ env_group_modifier }}') | length > 0 }}"
        fail_msg: "Host group 'dci_database:{{ env_group_modifier }}' does not contain any hosts. Can't continue."
        success_msg: |
          Hosts found in the dci_database:{{ env_group_modifier }} group: {{ lookup('inventory_hostnames', 'dci_database:{{ env_group_modifier }}') }}
  run_once: true

- name: Common-Configuration
  hosts: all:!dci_ng
  become: yes
  roles:
    - common
    - prometheus-node-exporter
  tags:
    - dci-core
    - packages
    - doc

- name: Common Configuration for nodes inside Red Hat's network
  hosts: dci_internal:!dci_ng
  become: yes
  tasks:
    - include_role:
        name: common
        tasks_from: rh-internal
        handlers_from: rh-internal
  tags:
    - dci-core
    - dci-internal

- name: Install-fail2ban
  hosts: all:!dci_ng
  become: yes
  roles:
    - role: fail2ban
      when: fail2ban_disabled is not defined
  tags:
    - dci-core

- name: Configure the jumpbox/bastion node
  hosts: dci_bastion:!dci_ng
  become: yes
  tasks:
    - import_role:
        name: packages
        tasks_from: zuul_user
    - import_role:
        name: dci.certbot
        # The remaining part of the certbot role is not relevant anymore and has to be reworked
        tasks_from: ssh_key

  tags:
    - dci-core
    - packages

- name: Install DCI registry
  hosts: dci_registry:!dci_ng
  become: yes
  roles:
    - registry
  tags:
    - registry

- name: Install DCI Feeder
  hosts: dci_feeder:!dci_ng
  become: yes
  roles:
    - redis
    - dci-feeder
    - rq_exporter
  tags:
    - feeder

- name: Install DCI Feeder workers
  hosts: dci_feeder_worker:!dci_ng
  become: yes
  tasks:
    - import_role:
        name: dci-feeder
        tasks_from: standalone_worker
  tags:
    - feeder

- name: Install DCI UMB
  hosts: dci_umb:!dci_ng
  become: yes
  roles:
    - dci-umb
  tags:
    - dci-umb

- name: Install DCI Elasticsearch
  hosts: dci_analytics:!dci_ng
  become: yes
  roles:
    - elasticsearch
  tags:
    - elasticsearch
    - dci-core

- name: Install DCI Analytics
  hosts: dci_analytics:!dci_ng
  become: yes
  roles:
    - dci-analytics
  tags:
    - dci-analytics
    - dci-core
